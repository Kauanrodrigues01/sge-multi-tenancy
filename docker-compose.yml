services:
  sge:
    build: .
    container_name: sge-app
    restart: always
    networks:
      - sge-network
    env_file:
      - .env
    volumes:
      - static-data:/app/static/
      - shared_sockets:/app/uwsgi/
    depends_on:
      - db
    command: >
      sh -c "python3 manage.py collectstatic --no-input &&
             python3 manage.py wait_for_db &&
             python3 manage.py migrate &&
             python3 manage.py create_admin_user &&
             uwsgi --ini uwsgi.ini"

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static-data:/app/static/
      - shared_sockets:/run/uwsgi/
      - ./uwsgi_params:/etc/nginx/uwsgi_params
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - sge
    networks:
      - sge-network
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sf localhost/login/ || exit 1"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 5s
    
  
  db:
    container_name: db-sge
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sge-network

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  static-data:
    driver: local	
  shared_sockets:
    driver: local

networks:
  sge-network:
    driver: bridge
